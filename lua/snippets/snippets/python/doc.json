{
    "docstring": {
        "prefix": "docs",
        "body": [
            "\"\"\"",
            "${0:doc}",
            "\"\"\""
        ]
    },
    "module docstring": {
        "prefix": "docsm",
        "body": [
            "\"\"\"",
            "File: ${1:`vim_snippets#Filename('$1.py', 'foo.py')`}",
            "Author: `g:snips_author`",
            "Email: `g:snips_email`",
            "Github: `g:snips_github`",
            "Description: ${0}",
            "\"\"\""
        ]
    },
    "function docstring (pydoc)": {
        "prefix": "docsfp",
        "body": [
            "\"\"\"",
            "${1:Description}",
            "",
            "@param ${2:param}: ${3: Description}",
            "@type  $2: ${4: Type}",
            "",
            "@return: ${5: Description}",
            "@rtype : ${6: Type}",
            "",
            "@raise e: ${0: Description}",
            "\"\"\""
        ]
    },
    "function docstring (google)": {
        "prefix": "docsfg",
        "body": [
            "\"\"\"",
            "${1:Description}",
            "",
            "Note:",
            "\tDo not include the `self` parameter in the ``Args`` section.",
            "",
            "Args:",
            "\tparam1 (int): The first parameter.",
            "\tparam2 (str): The second parameter.",
            "",
            "Yields:",
            "\tint: The next number in the range of 0 to `n` - 1.",
            "",
            "Returns:",
            "\tbool: The return value. True for success, False otherwise.",
            "",
            "Raises:",
            "\tAttributeError: The ``Raises`` section is a list of all exceptions",
            "\t\tthat are relevant to the interface.",
            "\tValueError: If `param2` is equal to `param1`.",
            "\"\"\""
        ]
    },
    "class docstring (google)": {
        "prefix": "docscg",
        "body": [
            "\"\"\"",
            "${1:Description}",
            "",
            "Note:",
            "\tDo not include the `self` parameter in the ``Args`` section.",
            "",
            "Args:",
            "\tmsg (str): Human readable string describing the exception.",
            "\tcode (:obj:`int`, optional): Error code.",
            "",
            "Attributes:",
            "\tmsg (str): Human readable string describing the exception.",
            "\tcode (int): Exception error code.",
            "\"\"\""
        ]
    }
}
